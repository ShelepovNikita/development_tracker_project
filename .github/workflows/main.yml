name: development_tracker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: backend
          file: backend/Dockerfile
          push: true
          tags: lexxar91/backend:latest
      - name: Push frontend
        uses: docker/build-push-action@v2
        with:
          context: frontend/
          push: true
          tags: lexxar91/frontend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/main'
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH }}
       # passphrase: ${{ secrets.PASSPHRASE }}
        stack_file_name: docker-compose.yml
        script: |
          sudo docker pull lexxar91/backend:latest
          sudo docker pull lexxar91/frontend:latest
          sudo docker-compose stop
          sudo docker-compose rm backend
          touch .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker-compose up -d
#          sudo docker compose -f docker-compose.yml exec backend python manage.py migrate
#          sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic
#          sudo docker compose -f docker-compose.yml exec backend cp -r /app/collected_static/. /backend_static/static/